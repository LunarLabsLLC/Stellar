"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Util = void 0;
const _1 = require(".");
const undici_1 = require("undici");
const errors_1 = require("../errors");
class Util extends _1.BaseClass {
    constructor(client) {
        super(client);
    }
    async getUUID(name) {
        try {
            const data = await (0, undici_1.request)(`https://api.mojang.com/users/profiles/minecraft/${name}`);
            const json = (await data.body.json());
            if (json.error)
                throw new errors_1.HypixelTSError('GET_UUID_ERROR', json.error, data.statusCode);
            return json.id;
        }
        catch {
            throw new errors_1.HypixelTSError('GET_UUID_404');
        }
    }
    async getUsername(uuid) {
        if (!this.isUUID(uuid)) {
            throw new errors_1.HypixelTSError('NOT_UUID');
        }
        try {
            const data = await (0, undici_1.request)(`https://api.mojang.com/user/profile/${uuid}`);
            const json = (await data.body.json());
            if (json.error)
                throw new errors_1.HypixelTSError('GET_USERNAME_ERROR', json.error, data.statusCode);
            return json.name;
        }
        catch {
            throw new errors_1.HypixelTSError('GET_USERNAME_404');
        }
    }
    isUUID(uuid) {
        const regexStripped = /^[0-9a-f]{32}$/i;
        const regexFull = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}$/i;
        return regexStripped.test(uuid) || regexFull.test(uuid);
    }
}
exports.Util = Util;
//# sourceMappingURL=Util.js.map