import { BaseClass } from '.';
import type { Client } from '../lib';
import type { APIPlayer } from '../typings';
export declare class Player extends BaseClass {
    _id?: string;
    uuid: string;
    displayname: string;
    rank?: string;
    packageRank?: string;
    firstLogin: string;
    knownAliases?: string[];
    knownAliasesLower?: string[];
    lastLogin: number;
    playername?: string;
    achievementsOneTime?: string[];
    lastLogout: number;
    stats: Record<string, any>;
    achievementPoints?: number;
    achievements?: Record<string, any>;
    karma?: number;
    networkExp?: number;
    parkourCheckpointBests?: Record<string, any>;
    parkourCompletions?: Record<string, any>;
    channel?: string;
    challenges?: Record<string, any>;
    newPackageRank: string;
    levelUp_VIP?: number;
    achievementRewardsNew?: Record<string, any>;
    quests?: Record<string, any>;
    levelUp_MVP_PLUS?: number;
    currentGadget?: string;
    questSettings?: Record<string, any>;
    particlePack?: string;
    vanityMeta?: Record<string, any>;
    monthlycrates?: Record<string, any>;
    eugene?: Record<string, any>;
    petConsumables?: Record<string, any>;
    tourney?: Record<string, any>;
    rankPlusColor?: string;
    housingMeta?: Record<string, any>;
    monthlyPackageRank: string;
    mostRecentMonthlyPackageRank?: string;
    socialMedia?: Record<string, any>;
    achievementSync?: Record<string, any>;
    lastAdsenseGenerateTime?: number;
    lastClaimedReward?: number;
    rewardHighScore?: number;
    rewardScore?: number;
    rewardStreak?: number;
    totalDailyRewards?: number;
    totalRewards?: number;
    currentClickEffect?: string;
    disabledProjectileTrails?: boolean;
    seasonal?: Record<string, any>;
    adsense_tokens?: number;
    monthlyRankColor?: string;
    currentPet?: string;
    petStats?: Record<string, any>;
    petJourneyTimestamp?: number;
    giftingMeta?: Record<string, any>;
    achievementTotem?: Record<string, any>;
    mostRecentGameType?: string;
    constructor(client: Client, data: APIPlayer);
    get recentlyPlayedGames(): Promise<import("../typings").GetRecentlyPlayedGamesResponse[]>;
    get status(): Promise<import("../typings").GetStatusResponse>;
    get guild(): Promise<import("./Guild").Guild>;
}
//# sourceMappingURL=Player.d.ts.map