"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = exports.HypixelTSError = void 0;
const messages = new Map();
class HypixelTSError extends Error {
    constructor(key, ...args) {
        super(getMessage(key, args));
        function getMessage(key, args) {
            if (typeof key !== 'string')
                throw new Error('[getMessage]: argument key must be a string');
            const msg = messages.get(key);
            if (!msg)
                throw new Error(`[getMessage]: An invalid error key was provided: ${key}`);
            if (typeof msg === 'function')
                return msg(...args);
            if (!args.length)
                return msg;
            args.unshift(msg);
            return String(...args);
        }
    }
}
exports.HypixelTSError = HypixelTSError;
function register(name, value) {
    messages.set(name, typeof value === 'function' ? value : String(value));
}
exports.register = register;
//# sourceMappingURL=HypixelTSError.js.map