import { BaseManager } from '.';
import { type Client } from '../lib';
import type { CollectionInformationResponse, SkillsInformationResponse, ItemsInformationResponse, GetNewsResponseItem, GetActiveAuctionsResponse, RecentlyEndedAuctionsResponse, SkyBlockAuction, BaazarResponse, GetAuctionType } from '../typings';
import { SkyBlockProfile } from '../classes';
export declare class SkyBlockManager extends BaseManager {
    constructor(client: Client);
    collections(): Promise<CollectionInformationResponse>;
    skills(): Promise<SkillsInformationResponse>;
    items(): Promise<ItemsInformationResponse>;
    getNews(): Promise<GetNewsResponseItem[]>;
    getAuction(uuid: string, type: GetAuctionType): Promise<SkyBlockAuction | []>;
    getActiveAuctions(pageNumber?: number): Promise<GetActiveAuctionsResponse>;
    recentlyEndedAuctions(): Promise<RecentlyEndedAuctionsResponse>;
    bazaar(): Promise<BaazarResponse>;
    getProfile(nameOrUUID: string): Promise<SkyBlockProfile | null>;
}
//# sourceMappingURL=SkyBlockManager.d.ts.map